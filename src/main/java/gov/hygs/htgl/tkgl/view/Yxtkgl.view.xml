<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="tktmType">
      <Property name="creationType">gov.hygs.htgl.entity.Tktm</Property>
      <PropertyDef name="id">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="flId">
        <Property name="dataType">Integer</Property>
      </PropertyDef>
      <PropertyDef name="tkfl">
        <Property name="label">所属分类</Property>
        <Validator name="validator1" type="required">
          <Property name="resultMessage">所属分类不能为空</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="userId">
        <Property name="dataType">Integer</Property>
      </PropertyDef>
      <PropertyDef name="user">
        <Property name="label">录入人</Property>
      </PropertyDef>
      <PropertyDef name="createDate">
        <Property name="dataType">Date</Property>
        <Property name="label">创建日期</Property>
        <Validator name="validator1" type="required">
          <Property name="resultMessage">创建日期不能为空</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="spDate">
        <Property name="dataType">Date</Property>
      </PropertyDef>
      <PropertyDef name="sprId">
        <Property name="dataType">Integer</Property>
      </PropertyDef>
      <PropertyDef name="deptid">
        <Property name="dataType">Integer</Property>
      </PropertyDef>
      <PropertyDef name="dept">
        <Property name="label">部门名称</Property>
      </PropertyDef>
      <PropertyDef name="content">
        <Property></Property>
        <Property name="label">提干内容</Property>
        <Validator name="validator1" type="required">
          <Property name="resultMessage">内容不能为空</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="tmfz">
        <Property name="dataType">Double</Property>
        <Property name="label">题目分值</Property>
      </PropertyDef>
      <PropertyDef name="tmnd">
        <Property name="dataType">Integer</Property>
        <Property name="label">题目难度</Property>
        <Property name="mapping">
          <Property name="mapValues">
            <Collection>
              <Entity>
                <Property name="key">0</Property>
                <Property name="value">基础题</Property>
              </Entity>
              <Entity>
                <Property name="key">1</Property>
                <Property name="value">进阶题</Property>
              </Entity>
              <Entity>
                <Property name="key">2</Property>
                <Property name="value">非税收业务类</Property>
              </Entity>
            </Collection>
          </Property>
        </Property>
        <Validator name="validator1" type="required">
          <Property name="resultMessage">难度不能为空</Property>
          <Property name="acceptZeroOrFalse">true</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="tmlyId">
        <Property name="dataType">Integer</Property>
      </PropertyDef>
      <PropertyDef name="tmly">
        <Property name="label">题目来源</Property>
        <Validator type="required">
          <Property name="name">题目来源不能为空</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="tmlyContent">
        <Property></Property>
        <Property name="label">来源内容</Property>
      </PropertyDef>
      <PropertyDef name="mode">
        <ClientEvent name="onSet">/*view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).cancel();&#xD;
var yxtk = view.get(&quot;#dsYxtk&quot;).getData(&quot;#&quot;);&#xD;
if(yxtk.get(&quot;id&quot;) == undefined){&#xD;
	//新增&#xD;
	if(arg.value == 0){&#xD;
		view.get(&quot;#newxzKey&quot;).set(&quot;visible&quot;,false);&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({id:1,tkId:0,xzKey:&quot;A&quot;,content:&quot;对&quot;});&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({id:0,tkId:0,xzKey:&quot;B&quot;,content:&quot;错&quot;});&#xD;
		view.get(&quot;#newtkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
	}else{&#xD;
		view.get(&quot;#newxzKey&quot;).set(&quot;visible&quot;,true);&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;A&quot;});&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;B&quot;});&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;C&quot;});&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;D&quot;});&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;E&quot;});&#xD;
		if(arg.value == 1){&#xD;
			view.get(&quot;#newtkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
		}else if(arg.value == 2){&#xD;
			view.get(&quot;#newtkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;multiRows&quot;);&#xD;
		}&#xD;
	}&#xD;
	view.get(&quot;#tkxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
}else{&#xD;
	//修改&#xD;
	if(arg.value == 1){&#xD;
		view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
	}else if(arg.value == 2){&#xD;
		view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;multiRows&quot;);&#xD;
	}else if(arg.value == 0){&#xD;
		view.get(&quot;#tofxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
	}&#xD;
	var das = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.daxzx&quot;);&#xD;
	if(das.current != undefined &amp;&amp; das.current.get(&quot;content&quot;) != undefined){&#xD;
		das.each(function(da){&#xD;
			da.set({content:null});&#xD;
		});&#xD;
	}&#xD;
	view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
	if(arg.value == 0){&#xD;
		view.get(&quot;#updatetkxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
		view.get(&quot;#updatetofxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
	}else{&#xD;
		view.get(&quot;#updatetofxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
		view.get(&quot;#updatetkxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).cancel();&#xD;
		view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).each(function(entity){&#xD;
			entity.set(&quot;content&quot;,null);&#xD;
		});&#xD;
		if(view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).current == undefined){&#xD;
			view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;A&quot;,tkId:yxtk.get(&quot;id&quot;)});&#xD;
			view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;B&quot;,tkId:yxtk.get(&quot;id&quot;)});&#xD;
			view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;C&quot;,tkId:yxtk.get(&quot;id&quot;)});&#xD;
			view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;D&quot;,tkId:yxtk.get(&quot;id&quot;)});&#xD;
			view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;).insert({xzKey:&quot;E&quot;,tkId:yxtk.get(&quot;id&quot;)});&#xD;
		}&#xD;
		&#xD;
	}&#xD;
}&#xD;
*/</ClientEvent>
        <Property></Property>
        <Property name="label">选择类型</Property>
        <Property name="mapping">
          <Property name="mapValues">
            <Collection>
              <Entity>
                <Property name="value">判断题</Property>
                <Property name="key">0</Property>
              </Entity>
              <Entity>
                <Property name="value">单选题</Property>
                <Property name="key">1</Property>
              </Entity>
              <Entity>
                <Property name="value">多选题</Property>
                <Property name="key">2</Property>
              </Entity>
            </Collection>
          </Property>
        </Property>
        <Validator name="validator1" type="required">
          <Property name="resultMessage">模式不能为空</Property>
        </Validator>
      </PropertyDef>
      <Reference name="tkxzx">
        <Property name="dataType">[tkzxzType]</Property>
        <Property name="dataProvider">zstkglController#getTkzxzInfoByZstkId</Property>
        <Property name="parameter">$${this.id}</Property>
      </Reference>
      <Reference name="daxzx">
        <Property name="dataType">[tkzxzType]</Property>
        <Property name="dataProvider">zstkglController#getDaXzxInfoByZstkId</Property>
        <Property name="parameter">$${this.id}</Property>
      </Reference>
      <Reference name="tof">
        <Property name="dataType">[tkzxzType]</Property>
        <Property name="dataProvider">zstkglController#getToFInfo</Property>
      </Reference>
      <PropertyDef name="yxbz">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="xybz">
        <Property></Property>
        <Property name="label">是否选中</Property>
        <Property name="mapping">
          <Property name="mapValues">
            <Collection>
              <Entity>
                <Property name="key">N</Property>
                <Property name="value">未选中</Property>
              </Entity>
              <Entity>
                <Property name="key">Y</Property>
                <Property name="value">选中</Property>
              </Entity>
            </Collection>
          </Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="ksbz">
        <Property></Property>
        <Property name="label">临时题目</Property>
        <Property name="mapping">
          <Property name="mapValues">
            <Collection>
              <Entity>
                <Property name="key">Y</Property>
                <Property name="value">是</Property>
              </Entity>
              <Entity>
                <Property name="key">N</Property>
                <Property name="value">否</Property>
              </Entity>
            </Collection>
          </Property>
        </Property>
        <Property name="defaultValue">N</Property>
      </PropertyDef>
    </DataType>
    <DataType name="tkzxzType">
      <Property name="creationType">gov.hygs.htgl.entity.Tkxzx</Property>
      <PropertyDef name="id">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="tkId">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="xzKey">
        <ClientEvent name="onSet">/*var datas = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;);&#xD;
if(datas.getLast() != null){&#xD;
	if(datas.getLast().get(&quot;xzKey&quot;) == undefined){&#xD;
		datas.each(function(entity){&#xD;
			if(entity.get(&quot;xzKey&quot;) == arg.value){&#xD;
				//alert(arg.value);&#xD;
				throw new dorado.Exception(&quot;记录已经存在，无法添加！&quot;)&#xD;
				return false;&#xD;
			}&#xD;
		});&#xD;
	}&#xD;
}&#xD;
*/</ClientEvent>
        <Property></Property>
        <Property name="readOnly">true</Property>
        <Validator name="validator1" type="required">
          <Property name="resultMessage">选项不能为空</Property>
        </Validator>
        <Validator name="validator2" type="length">
          <Property name="maxLength">1</Property>
          <Property name="resultMessage">文本内容过多，长度应为1</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="content">
        <Property></Property>
      </PropertyDef>
    </DataType>
    <DataType name="conditionType">
      <PropertyDef name="begin">
        <Property name="dataType">Date</Property>
        <Property name="label">创建时间起</Property>
      </PropertyDef>
      <PropertyDef name="end">
        <Property name="dataType">Date</Property>
        <Property name="label">创建时间止</Property>
      </PropertyDef>
      <PropertyDef name="dept">
        <Property name="label">部门名称</Property>
      </PropertyDef>
      <PropertyDef name="user">
        <Property name="label">录入人</Property>
      </PropertyDef>
      <PropertyDef name="content">
        <Property name="label">来源</Property>
      </PropertyDef>
      <PropertyDef name="deptid"/>
      <PropertyDef name="userid"/>
      <PropertyDef name="flId"/>
      <PropertyDef name="tkfl">
        <Property name="label">题库分类</Property>
      </PropertyDef>
      <PropertyDef name="tktmcontent">
        <Property name="label">提干内容</Property>
      </PropertyDef>
      <PropertyDef name="ksbz">
        <Property name="label">临时题目</Property>
      </PropertyDef>
    </DataType>
  </Model>
  <View>
    <DataSet id="dsYxtk">
      <Property name="dataType">[tktmType]</Property>
      <Property name="dataProvider">tkglController#getYxtkInfo</Property>
      <Property name="pageSize">20</Property>
    </DataSet>
    <Container>
      <GroupBox>
        <ClientEvent name="onReady">/*var data = view.get(&quot;#dsUserName&quot;).getData(&quot;#&quot;);&#xD;
if(data != undefined){&#xD;
	if(data.get(&quot;rolename&quot;) == &quot;DeptAdmin&quot;){&#xD;
		view.get(&quot;#deptInfo&quot;).set(&quot;readOnly&quot;,true);&#xD;
		view.get(&quot;#userInfoName&quot;).set(&quot;readOnly&quot;,false);&#xD;
		view.get(&quot;#conditionForm&quot;).get(&quot;entity&quot;).set({&#xD;
			dept:data.get(&quot;deptname&quot;),&#xD;
			deptid:data.get(&quot;deptid&quot;)&#xD;
		});&#xD;
	}else if(data.get(&quot;rolename&quot;) == &quot;Other&quot;){&#xD;
		self.set(&quot;visible&quot;,false);&#xD;
	}&#xD;
}&#xD;
*/</ClientEvent>
        <Property name="caption">查询条件</Property>
        <Property name="hideMode">display</Property>
        <Buttons/>
        <Children>
          <AutoForm id="conditionForm">
            <Property name="dataType">conditionType</Property>
            <Property name="createPrivateDataSet">true</Property>
            <Property name="cols">*,*,*</Property>
            <AutoFormElement>
              <Property name="name">begin</Property>
              <Property name="property">begin</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">end</Property>
              <Property name="property">end</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement id="deptInfo">
              <Property name="name">dept</Property>
              <Property name="property">dept</Property>
              <Property name="editable">false</Property>
              <Property name="trigger">clearDept,deptDropDown</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement id="userInfoName">
              <Property name="name">user</Property>
              <Property name="property">user</Property>
              <Property name="trigger">clearUser,userDropDown</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">tkfl</Property>
              <Property name="property">tkfl</Property>
              <Property name="trigger">clearTkfl,tkflConditionDropDown</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">ksbz</Property>
              <Property name="property">ksbz</Property>
              <Property name="trigger">clearKsbz,ksbzDropDown</Property>
              <Property name="editable">false</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">content</Property>
              <Property name="property">content</Property>
              <Property name="trigger">clearLy</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">tktmcontent</Property>
              <Property name="property">tktmcontent</Property>
              <Property name="trigger">clearContent</Property>
              <Editor/>
            </AutoFormElement>
            <Button id="findbutton">
              <ClientEvent name="onClick">var entity = view.get(&quot;#conditionForm&quot;).get(&quot;entity&quot;);&#xD;
var dept = entity.get(&quot;dept&quot;);&#xD;
var user = entity.get(&quot;user&quot;);&#xD;
var begin = entity.get(&quot;begin&quot;);&#xD;
var end = entity.get(&quot;end&quot;);&#xD;
if(end &lt; begin &amp;&amp; end != null){&#xD;
	throw new dorado.Exception(&quot;终止日期不能小于起始日期！&quot;);&#xD;
}&#xD;
if(dept == &quot;&quot;){&#xD;
	view.get(&quot;#conditionForm&quot;).get(&quot;entity&quot;).set({&#xD;
		dept:null,&#xD;
		deptid:null&#xD;
		//user:null,&#xD;
		//userid:null&#xD;
	});&#xD;
}&#xD;
if(user == &quot;&quot;){&#xD;
	view.get(&quot;#conditionForm&quot;).get(&quot;entity&quot;).set({&#xD;
		user:null,&#xD;
		userid:null&#xD;
	});&#xD;
}else if(entity.get(&quot;userid&quot;) == &quot;&quot;){&#xD;
	view.get(&quot;#conditionForm&quot;).get(&quot;entity&quot;).set({&#xD;
		userid:null&#xD;
	});&#xD;
}&#xD;
view.get(&quot;#dsYxtk&quot;).set(&quot;parameter&quot;,view.get(&quot;#conditionForm&quot;).get(&quot;entity&quot;));&#xD;
view.get(&quot;#dsYxtk&quot;).flush();&#xD;
&#xD;
</ClientEvent>
              <Property name="icon">url(>skin>common/icons.gif) -20px -40px</Property>
              <Property name="caption">查询</Property>
              <Property name="hideMode">display</Property>
            </Button>
          </AutoForm>
        </Children>
      </GroupBox>
      <GroupBox>
        <Property name="caption">题目信息表</Property>
        <Buttons/>
        <Children>
          <ToolBar>
            <ClientEvent name="onReady">/*var data = view.get(&quot;#dsUserName&quot;).getData(&quot;#&quot;);&#xD;
if(data != undefined){&#xD;
	if(data.get(&quot;rolename&quot;) == &quot;Other&quot;){&#xD;
		view.get(&quot;#findbutton&quot;).set(&quot;visible&quot;,false);&#xD;
		view.get(&quot;#inbutton&quot;).set(&quot;visible&quot;,false);&#xD;
	}&#xD;
	if(data.get(&quot;rolename&quot;) == &quot;SuAdmin&quot;){&#xD;
		view.get(&quot;#importExcel&quot;).set(&quot;visible&quot;,true);&#xD;
	}&#xD;
}&#xD;
*/</ClientEvent>
            <Button>
              <ClientEvent name="onClick">var yxtks = view.get(&quot;#dsYxtk&quot;).getData();&#xD;
/*&#xD;
if(yxtks.current == null){&#xD;
	view.get(&quot;#dsYxtk&quot;).insert({&#xD;
		id: 1&#xD;
	});&#xD;
}else{&#xD;
	&#xD;
	var i = 1;&#xD;
	var j = 0;&#xD;
	yxtks.each(function(yxtk){&#xD;
		if(i != yxtk.get(&quot;id&quot;) &amp;&amp; j == 0){&#xD;
			j++;&#xD;
		}&#xD;
		if(j == 0){&#xD;
			i++;&#xD;
		}&#xD;
	});&#xD;
	&#xD;
	var id = view.get(&quot;#dsYxtk&quot;).getData().getFirst().get(&quot;id&quot;);&#xD;
	view.get(&quot;#dsYxtk&quot;).insert({id:parseInt(id)+1});&#xD;
}&#xD;
*/&#xD;
//view.get(&quot;#dsYxtk&quot;).getData(&quot;#.dept&quot;).insert();&#xD;
view.get(&quot;#dsYxtk&quot;).insert();&#xD;
//view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tmly&quot;).insert();&#xD;
//view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkfl&quot;).insert();&#xD;
view.get(&quot;#addyxtkDialog&quot;).show();&#xD;
</ClientEvent>
              <Property name="caption">增加</Property>
              <Property name="icon"> url(>skin>common/icons.gif) -120px -0px</Property>
            </Button>
            <Button>
              <ClientEvent name="onClick">var entitys = view.get('#tktmGrid.selection');&#xD;
//var current = view.get(&quot;#dsYxtk&quot;).getData(&quot;#&quot;);&#xD;
if(entitys != undefined){&#xD;
	dorado.MessageBox.confirm(&quot;真的要删除当前数据？&quot;,function(){&#xD;
		/*&#xD;
		var das = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.daxzx&quot;);&#xD;
		var xzs = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;);&#xD;
		das.each(function(da){&#xD;
			da.remove();&#xD;
		});&#xD;
		xzs.each(function(xz){&#xD;
			xz.remove();&#xD;
		});&#xD;
		*/&#xD;
		entitys.each(function(entity){&#xD;
			entity.remove();&#xD;
		});&#xD;
		view.get(&quot;#updateAction&quot;).execute();&#xD;
	});&#xD;
}&#xD;
</ClientEvent>
              <Property name="caption">删除</Property>
              <Property name="icon">url(>skin>common/icons.gif) -140px -0px</Property>
            </Button>
            <Button>
              <ClientEvent name="onClick">var dsYxtk = view.get(&quot;#dsYxtk&quot;).getData(&quot;#&quot;);&#xD;
view.get(&quot;#updateyxtkForm&quot;).set(&quot;readOnly&quot;,false);&#xD;
view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;readOnly&quot;,false);&#xD;
view.get(&quot;#submitButton&quot;).set(&quot;visible&quot;,true);&#xD;
view.get(&quot;#tmSelect&quot;).set(&quot;visible&quot;,true);&#xD;
view.get(&quot;#tofselect&quot;).set(&quot;visible&quot;,true);&#xD;
if(dsYxtk == undefined){&#xD;
	return;&#xD;
}&#xD;
//var content = dsYxtk.get(&quot;content&quot;);&#xD;
var mode = dsYxtk.get(&quot;mode&quot;);&#xD;
&#xD;
if(mode == 1){&#xD;
	//content = content + &quot;(单选题)&quot;;&#xD;
	view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
}else if(mode == 2){&#xD;
	//content = content + &quot;(多选题)&quot;;&#xD;
	view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;multiRows&quot;);&#xD;
}else if(mode == 0){&#xD;
	//content = content + &quot;(判断题)&quot;;&#xD;
	view.get(&quot;#tofxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
}&#xD;
&#xD;
var entity = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.daxzx&quot;);&#xD;
&#xD;
if(mode ==1 || mode == 2){&#xD;
	//单选或多选题&#xD;
&#xD;
	view.get(&quot;#updatetofxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
	view.get(&quot;#updatetkxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
	view.get(&quot;#daxzKey&quot;).set(&quot;visible&quot;,true);&#xD;
	if(entity.current == undefined){&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
		//view.get(&quot;#contentLable&quot;).set(&quot;text&quot;,content);&#xD;
		view.get(&quot;#updateyxtkDialog&quot;).show();&#xD;
	}else{&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
		var selects = [];&#xD;
		var xzs = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;);&#xD;
		entity.each(function(da){&#xD;
			xzs.each(function(xz){&#xD;
				if(da.get(&quot;id&quot;) == xz.get(&quot;id&quot;)){&#xD;
					selects.push(xz);&#xD;
				}&#xD;
			});&#xD;
		});&#xD;
		//view.get(&quot;#contentLable&quot;).set(&quot;text&quot;,content);&#xD;
		view.get(&quot;#updateyxtkDialog&quot;).show();&#xD;
		if(mode == 1){&#xD;
			view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selection&quot;,selects[0]);&#xD;
		}else if(mode == 2){&#xD;
			view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selection&quot;,selects);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
}else{&#xD;
	//判断题&#xD;
	view.get(&quot;#updatetofxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
	view.get(&quot;#updatetkxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
	view.get(&quot;#daxzKey&quot;).set(&quot;visible&quot;,false);&#xD;
	&#xD;
	if(entity.current == undefined){&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
	}else{&#xD;
		var xzs = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tof&quot;);//============&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
		var select = null;&#xD;
		entity.each(function(da){&#xD;
			xzs.each(function(xz){&#xD;
				if(da.get(&quot;xzKey&quot;) == xz.get(&quot;xzKey&quot;)){&#xD;
					select = xz;&#xD;
					da.set({tkId:view.get(&quot;#dsYxtk&quot;).getData(&quot;#&quot;).get(&quot;id&quot;)});&#xD;
				}&#xD;
			});&#xD;
		});&#xD;
				&#xD;
	}&#xD;
	//view.get(&quot;#tofcontentLable&quot;).set(&quot;text&quot;,content);	&#xD;
	view.get(&quot;#updateyxtkDialog&quot;).show();&#xD;
	view.get(&quot;#tofxzxGrid&quot;).set(&quot;selection&quot;,select);&#xD;
}&#xD;
</ClientEvent>
              <ClientEvent name="onMouseDown">/*&#xD;
var dsYxtks = view.get('#tktmGrid.selection');&#xD;
if(dsYxtks == &quot;&quot;){&#xD;
	return;&#xD;
}&#xD;
var i = 0;&#xD;
dsYxtks.each(function(entity){&#xD;
	i++;&#xD;
})&#xD;
if(i > 1){&#xD;
	alert(&quot;return&quot;);&#xD;
	return;&#xD;
}&#xD;
var grid = view.get(&quot;#tktmGrid&quot;);&#xD;
var id;&#xD;
dsYxtks.each(function(entity){&#xD;
	id = entity.get(&quot;id&quot;);		&#xD;
})&#xD;
var dsYxtk = view.get(&quot;#dsYxtk&quot;).getData(&quot;[@.get('id')=='&quot;+id+&quot;']&quot;);&#xD;
grid.setCurrentEntity(dsYxtk);&#xD;
*/</ClientEvent>
              <Property name="caption">修改</Property>
              <Property name="icon">url(>skin>common/icons.gif) -200px -0px</Property>
            </Button>
            <Button>
              <ClientEvent name="onClick">var dsYxtk = view.get(&quot;#dsYxtk&quot;).getData(&quot;#&quot;);&#xD;
view.get(&quot;#updateyxtkForm&quot;).set(&quot;readOnly&quot;,true);&#xD;
view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;readOnly&quot;,true);&#xD;
view.get(&quot;#submitButton&quot;).set(&quot;visible&quot;,false);&#xD;
view.get(&quot;#tmSelect&quot;).set(&quot;visible&quot;,false);&#xD;
view.get(&quot;#tofselect&quot;).set(&quot;visible&quot;,false);&#xD;
if(dsYxtk == undefined){&#xD;
	return;&#xD;
}&#xD;
//var content = dsYxtk.get(&quot;content&quot;);&#xD;
var mode = dsYxtk.get(&quot;mode&quot;);&#xD;
&#xD;
if(mode == 1){&#xD;
	//content = content + &quot;(单选题)&quot;;&#xD;
	view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
}else if(mode == 2){&#xD;
	//content = content + &quot;(多选题)&quot;;&#xD;
	view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;multiRows&quot;);&#xD;
}else if(mode == 0){&#xD;
	//content = content + &quot;(判断题)&quot;;&#xD;
	view.get(&quot;#tofxzxGrid&quot;).set(&quot;selectionMode&quot;,&quot;singleRow&quot;);&#xD;
}&#xD;
&#xD;
var entity = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.daxzx&quot;);&#xD;
&#xD;
if(mode ==1 || mode == 2){&#xD;
	//单选或多选题&#xD;
&#xD;
	view.get(&quot;#updatetofxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
	view.get(&quot;#updatetkxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
	view.get(&quot;#daxzKey&quot;).set(&quot;visible&quot;,true);&#xD;
	if(entity.current == undefined){&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
		//view.get(&quot;#contentLable&quot;).set(&quot;text&quot;,content);&#xD;
		view.get(&quot;#updateyxtkDialog&quot;).show();&#xD;
	}else{&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
		var selects = [];&#xD;
		var xzs = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tkxzx&quot;);&#xD;
		entity.each(function(da){&#xD;
			xzs.each(function(xz){&#xD;
				if(da.get(&quot;id&quot;) == xz.get(&quot;id&quot;)){&#xD;
					selects.push(xz);&#xD;
				}&#xD;
			});&#xD;
		});&#xD;
		//view.get(&quot;#contentLable&quot;).set(&quot;text&quot;,content);&#xD;
		view.get(&quot;#updateyxtkDialog&quot;).show();&#xD;
		if(mode == 1){&#xD;
			view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selection&quot;,selects[0]);&#xD;
		}else if(mode == 2){&#xD;
			view.get(&quot;#updatetkxzxGrid&quot;).set(&quot;selection&quot;,selects);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
}else{&#xD;
	//判断题&#xD;
	view.get(&quot;#updatetofxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
	view.get(&quot;#updatetkxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
	view.get(&quot;#daxzKey&quot;).set(&quot;visible&quot;,false);&#xD;
	&#xD;
	if(entity.current == undefined){&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,false);&#xD;
	}else{&#xD;
		var xzs = view.get(&quot;#dsYxtk&quot;).getData(&quot;#.tof&quot;);//============&#xD;
		view.get(&quot;#updatedaxzxGroup&quot;).set(&quot;visible&quot;,true);&#xD;
		var select = null;&#xD;
		entity.each(function(da){&#xD;
			xzs.each(function(xz){&#xD;
				if(da.get(&quot;xzKey&quot;) == xz.get(&quot;xzKey&quot;)){&#xD;
					select = xz;&#xD;
					da.set({tkId:view.get(&quot;#dsYxtk&quot;).getData(&quot;#&quot;).get(&quot;id&quot;)});&#xD;
				}&#xD;
			});&#xD;
		});&#xD;
				&#xD;
	}&#xD;
	//view.get(&quot;#tofcontentLable&quot;).set(&quot;text&quot;,content);	&#xD;
	view.get(&quot;#updateyxtkDialog&quot;).show();&#xD;
	view.get(&quot;#tofxzxGrid&quot;).set(&quot;selection&quot;,select);&#xD;
}&#xD;
&#xD;
</ClientEvent>
              <Property name="caption">查看题目</Property>
              <Property name="icon">url(>skin>common/icons.gif) -40px -100px</Property>
            </Button>
            <Button id="inbutton">
              <ClientEvent name="onClick">view.get(&quot;#dsDeptIn&quot;).flush();&#xD;
view.get(&quot;#yxTzsDialog&quot;).show();&#xD;
</ClientEvent>
              <Property name="caption">选题入库</Property>
              <Property name="icon">url(>skin>common/icons.gif) -0px -20px</Property>
              <Property name="hideMode">display</Property>
            </Button>
            <Button id="importExcel">
              <Property name="caption">导入</Property>
              <Property name="action">uploadAction</Property>
              <Property name="visible">false</Property>
              <Property name="hideMode">display</Property>
              <Property name="icon">url(>skin>common/icons.gif) -80px -60px</Property>
            </Button>
            <DataPilot>
              <Property name="dataSet">dsYxtk</Property>
              <Property name="itemCodes">pages</Property>
            </DataPilot>
          </ToolBar>
          <DataGrid id="tktmGrid">
            <Property name="dataSet">dsYxtk</Property>
            <Property name="readOnly">true</Property>
            <Property name="selectionMode">multiRows</Property>
            <RowSelectorColumn/>
            <RowNumColumn/>
            <DataColumn name="tkfl">
              <Property name="property">tkfl</Property>
            </DataColumn>
            <DataColumn name="createDate">
              <Property name="property">createDate</Property>
            </DataColumn>
            <DataColumn name="content">
              <Property name="property">content</Property>
            </DataColumn>
            <DataColumn name="tmfz">
              <Property name="property">tmfz</Property>
            </DataColumn>
            <DataColumn name="tmnd">
              <Property name="property">tmnd</Property>
            </DataColumn>
            <DataColumn name="tmly">
              <Property name="property">tmly</Property>
            </DataColumn>
            <DataColumn name="mode">
              <Property name="property">mode</Property>
            </DataColumn>
            <DataColumn name="user">
              <Property name="property">user</Property>
            </DataColumn>
            <DataColumn name="dept">
              <Property name="property">dept</Property>
            </DataColumn>
            <DataColumn name="xybz">
              <Property name="property">xybz</Property>
            </DataColumn>
            <DataColumn name="ksbz">
              <Property name="property">ksbz</Property>
            </DataColumn>
          </DataGrid>
        </Children>
      </GroupBox>
    </Container>
  </View>
</ViewConfig>
